From 905cdd836a9968e13016ee4deabb65b122cd2eb5 Mon Sep 17 00:00:00 2001
From: Max Ihlenfeldt <max@igalia.com>
Date: Thu, 13 Apr 2023 12:08:01 +0000
Subject: [PATCH] Only default operator== on declaration

The requirement that the comparison operator can only be defaulted on
the first declaration was removed in P2085R0, which clang only supports
in versions 14 and above. Because dunfell still uses clang 12, we need
to fix the few occurrences where this requirement isn't met.

Upstream-Status: Inappropriate

Signed-off-by: Max Ihlenfeldt <max@igalia.com>
---
 .../core/browser/affiliation/affiliation_fetcher_base.cc     | 3 ---
 .../core/browser/affiliation/affiliation_fetcher_base.h      | 3 ---
 .../core/browser/affiliation/affiliation_fetcher_interface.h | 2 +-
 .../password_manager/core/browser/passkey_credential.cc      | 3 ---
 .../password_manager/core/browser/passkey_credential.h       | 5 +----
 components/password_manager/core/browser/password_form.cc    | 2 --
 components/password_manager/core/browser/password_form.h     | 2 +-
 7 files changed, 3 insertions(+), 17 deletions(-)

diff --git a/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.cc b/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.cc
index 5d5b95e0d787a..3a499529885be 100644
--- a/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.cc
+++ b/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.cc
@@ -179,7 +179,4 @@ void AffiliationFetcherBase::OnSimpleLoaderComplete(
   }
 }

-bool operator==(const AffiliationFetcherInterface::RequestInfo& lhs,
-                const AffiliationFetcherInterface::RequestInfo& rhs) = default;
-
 }  // namespace password_manager
diff --git a/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.h b/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.h
index baa57ab9fb852..fe6e322918e82 100644
--- a/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.h
+++ b/components/password_manager/core/browser/affiliation/affiliation_fetcher_base.h
@@ -80,9 +80,6 @@ class AffiliationFetcherBase : public virtual AffiliationFetcherInterface {
   std::unique_ptr<network::SimpleURLLoader> simple_url_loader_;
 };

-bool operator==(const AffiliationFetcherInterface::RequestInfo& lhs,
-                const AffiliationFetcherInterface::RequestInfo& rhs);
-
 }  // namespace password_manager

 #endif  // COMPONENTS_PASSWORD_MANAGER_CORE_BROWSER_AFFILIATION_AFFILIATION_FETCHER_BASE_H_
diff --git a/components/password_manager/core/browser/affiliation/affiliation_fetcher_interface.h b/components/password_manager/core/browser/affiliation/affiliation_fetcher_interface.h
index 5bf889f5d940d..946eabe8dce6e 100644
--- a/components/password_manager/core/browser/affiliation/affiliation_fetcher_interface.h
+++ b/components/password_manager/core/browser/affiliation/affiliation_fetcher_interface.h
@@ -20,7 +20,7 @@ class AffiliationFetcherInterface {
     bool change_password_info = false;
     bool psl_extension_list = false;

-    friend bool operator==(const RequestInfo&, const RequestInfo&);
+    bool operator==(const RequestInfo& other) const = default;
   };

   AffiliationFetcherInterface() = default;
diff --git a/components/password_manager/core/browser/passkey_credential.cc b/components/password_manager/core/browser/passkey_credential.cc
index f0e46598704f4..12cf07ba62711 100644
--- a/components/password_manager/core/browser/passkey_credential.cc
+++ b/components/password_manager/core/browser/passkey_credential.cc
@@ -81,7 +81,4 @@ int PasskeyCredential::GetAuthenticatorLabel() const {
   }
 }

-bool operator==(const PasskeyCredential& lhs,
-                const PasskeyCredential& rhs) = default;
-
 }  // namespace password_manager
diff --git a/components/password_manager/core/browser/passkey_credential.h b/components/password_manager/core/browser/passkey_credential.h
index 71005a94024ee..66578b15e7c35 100644
--- a/components/password_manager/core/browser/passkey_credential.h
+++ b/components/password_manager/core/browser/passkey_credential.h
@@ -57,8 +57,7 @@ class PasskeyCredential {
   const std::string& display_name() const { return display_name_; }

  private:
-  friend bool operator==(const PasskeyCredential& lhs,
-                         const PasskeyCredential& rhs);
+  bool operator==(const PasskeyCredential& other) const = default;

   // Authenticator type this passkey belongs to.
   Source source_;
@@ -84,8 +83,6 @@ class PasskeyCredential {
   std::string display_name_;
 };

-bool operator==(const PasskeyCredential& lhs, const PasskeyCredential& rhs);
-
 }  // namespace password_manager

 #endif  // COMPONENTS_PASSWORD_MANAGER_CORE_BROWSER_PASSKEY_CREDENTIAL_H_
diff --git a/components/password_manager/core/browser/password_form.cc b/components/password_manager/core/browser/password_form.cc
index e11d5204e7527..c6c551aabc3de 100644
--- a/components/password_manager/core/browser/password_form.cc
+++ b/components/password_manager/core/browser/password_form.cc
@@ -230,8 +230,6 @@ AlternativeElement& AlternativeElement::operator=(AlternativeElement&& rhs) =

 AlternativeElement::~AlternativeElement() = default;

-bool AlternativeElement::operator==(const AlternativeElement&) const = default;
-
 bool AlternativeElement::operator<(const AlternativeElement& other) const {
   return std::tie(value, field_renderer_id, name) <
          std::tie(other.value, other.field_renderer_id, other.name);
diff --git a/components/password_manager/core/browser/password_form.h b/components/password_manager/core/browser/password_form.h
index a737d5382030f..7450bef2b0ca4 100644
--- a/components/password_manager/core/browser/password_form.h
+++ b/components/password_manager/core/browser/password_form.h
@@ -44,7 +44,7 @@ struct AlternativeElement {
   AlternativeElement& operator=(AlternativeElement&& rhs);
   ~AlternativeElement();

-  bool operator==(const AlternativeElement&) const;
+  bool operator==(const AlternativeElement&) const = default;
   bool operator<(const AlternativeElement&) const;

   // The value of the field.
